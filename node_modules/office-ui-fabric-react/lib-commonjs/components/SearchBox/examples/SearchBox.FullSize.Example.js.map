{"version":3,"file":"SearchBox.FullSize.Example.js","sourceRoot":"../src/","sources":["components/SearchBox/examples/SearchBox.FullSize.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,kEAAiE;AACjE,0DAAyD;AAEzD,+BAA+B;AAC/B;IAA8C,oDAAyB;IAAvE;;IAsBA,CAAC;IArBQ,yCAAM,GAAb;QACE,OAAO,CACL,oBAAC,aAAK,IAAC,MAAM,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE;YAChC,oBAAC,qBAAS,IACR,WAAW,EAAC,QAAQ,EACpB,QAAQ,EAAE,UAAA,QAAQ,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,QAAQ,CAAC,EAAnC,CAAmC,EACzD,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAA7B,CAA6B,EAC5C,MAAM,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,EAA5B,CAA4B,EAC1C,QAAQ,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAA9B,CAA8B,GAC9C;YACF,oBAAC,qBAAS,IACR,WAAW,EAAC,0BAA0B,EACtC,QAAQ,EAAE,UAAA,QAAQ,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,QAAQ,CAAC,EAAnC,CAAmC,EACzD,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAA7B,CAA6B,EAC5C,MAAM,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,EAA5B,CAA4B,EAC1C,QAAQ,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAA9B,CAA8B,EAC9C,gBAAgB,SAChB,CACI,CACT,CAAC;IACJ,CAAC;IACH,+BAAC;AAAD,CAAC,AAtBD,CAA8C,KAAK,CAAC,SAAS,GAsB5D;AAtBY,4DAAwB","sourcesContent":["import * as React from 'react';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\n\n// tslint:disable:jsx-no-lambda\nexport class SearchBoxFullSizeExample extends React.Component<any, any> {\n  public render(): JSX.Element {\n    return (\n      <Stack tokens={{ childrenGap: 20 }}>\n        <SearchBox\n          placeholder=\"Search\"\n          onSearch={newValue => console.log('value is ' + newValue)}\n          onFocus={() => console.log('onFocus called')}\n          onBlur={() => console.log('onBlur called')}\n          onChange={() => console.log('onChange called')}\n        />\n        <SearchBox\n          placeholder=\"Search with no animation\"\n          onSearch={newValue => console.log('value is ' + newValue)}\n          onFocus={() => console.log('onFocus called')}\n          onBlur={() => console.log('onBlur called')}\n          onChange={() => console.log('onChange called')}\n          disableAnimation\n        />\n      </Stack>\n    );\n  }\n}\n"]}